name: CI/CD MLOps

on:
  push:
    branches: [main, desarrollo]
  pull_request:
    branches: [main]

env:
  MODEL_NAME: "realtor_rf"
  MODEL_STAGE: "Production"
  MLFLOW_URI: "http://mlflow:5000"

jobs:
################################################################################
# 1) LINT + TEST
################################################################################
  lint_and_validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dev deps
        run: |
          pip install --upgrade pip
          pip install flake8 pytest apache-airflow==2.6.0

      - name: Flake8
        run: flake8 --max-line-length=120 --ignore=E203,W503 .

      - name: Syntax check
        run: python -m compileall .

      - name: Validate Airflow DAGs
        run: |
          export AIRFLOW_HOME=$(pwd)
          export AIRFLOW__CORE__DAGS_FOLDER=$(pwd)/dags
          airflow db init
          airflow dags list

      - name: pytest
        run: pytest --maxfail=1 --disable-warnings -q

################################################################################
# 2) BUILD & PUSH
################################################################################
  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_validate

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Airflow
        run: docker build -f airflow_dockerfile -t lccruzr9606/proyecto-airflow:latest .

      - name: Build API
        working-directory: api
        run: docker build -f ../api_dockerfile -t lccruzr9606/realtor-api:latest .

      - name: Build MLflow
        run: docker build -f mlflow_dockerfile -t lccruzr9606/mlflow-server:latest .

      - name: Build Streamlit
        working-directory: ui
        run: docker build -f ../streamlit_dockerfile -t lccruzr9606/realtor-streamlit:latest .

      - name: Push images
        run: |
          docker push lccruzr9606/proyecto-airflow:latest
          docker push lccruzr9606/realtor-api:latest
          docker push lccruzr9606/mlflow-server:latest
          docker push lccruzr9606/realtor-streamlit:latest

################################################################################
# 3) INTEGRATION TEST
################################################################################
  integration_test:
    runs-on: ubuntu-latest
    needs: build_and_push

    services:
      docker:
        image: docker:20.10.16-dind
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - uses: actions/checkout@v3

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull images
        run: |
          export DOCKER_HOST=tcp://localhost:2375
          docker pull lccruzr9606/proyecto-airflow:latest
          docker pull lccruzr9606/realtor-api:latest
          docker pull lccruzr9606/mlflow-server:latest
          docker pull lccruzr9606/realtor-streamlit:latest

      - name: Prepare compose
        run: cp docker-compose.yml ci-docker-compose.yml

      - name: Compose up
        run: |
          export DOCKER_HOST=tcp://localhost:2375
          docker compose -f ci-docker-compose.yml up -d --wait

      - name: Wait for stack
        run: sleep 20

      - name: Smoke Realtor API
        run: |
          code=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:8000/health)
          [ "$code" = "200" ]

      - name: Smoke MLflow
        run: |
          python3 - <<EOF
            import mlflow
            from mlflow.tracking import MlflowClient
            mlflow.set_tracking_uri("http://localhost:5000")
            client = MlflowClient()
            print("Encontradas", len(client.search_model_versions("name='${{ env.MODEL_NAME }}'")), "versiones")
          EOF

      - name: Smoke Streamlit
        run: |
          code=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:8501)
          [ "$code" = "200" ]

      - name: Compose down
        if: always()
        run: |
          export DOCKER_HOST=tcp://localhost:2375
          docker compose -f ci-docker-compose.yml down -v
